import 'package:flutter/material.dart';

const List<String> users = <String>["Эола", "Тигнари", "Венти", "Яэ Мико", "Ху Тао"];
const List<String> companies = <String>["Двуручный меч", "Лук", "Лук", "Катализатор", "Копьё"];
const List<String> description = <String>["Рыцарь Морская пена из старинного рода аристократов Мондштадта, капитан разведывательного отряда рыцарей Ордо Фавониус. Будучи потомком древней аристократии, она присоединилась к рыцарям Ордо Фавониус, их заклятым врагам. Причины этого поступка и по сей день остаются загадкой для всего Мондштадта.", "Молодой учёный, хорошо разбирающийся в ботанике. В настоящее время служит лесным стражем в лесу Авидья. Искренний и добросердечный, он умеет обучать даже самых непонятливых учеников.", "Обычный бард, слоняющийся по улочкам Мондштадта.", "Гудзи Великого храма Наруками, а также главный редактор издательского дома Яэ. Под прекрасной внешностью скрывается неожиданный ум и хитрость.", "Хозяйка ритуального бюро «Ваншэн» в семьдесят седьмом поколении. Она унаследовала этот бизнес в достаточно юном возрасте."];
const List<String> avatars = <String>[
  "assets/images/eula.jpeg",
  "assets/images/tignary.jpeg",
  "assets/images/Venti.jpeg",
  "assets/images/miko.jpeg",
  "assets/images/hu_tao.jpeg",
];

class MessagesPage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Сообщения'),
      ),
      body: Center(
        child: ElevatedButton(
          child: Text('Назад'),
          onPressed: () {
            Navigator.pop(context);
          },
        ),
      ),
    );
  }
}

    class LB3 extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Container(
      child: Column(
        children: <Widget>[
          //SizedBox(height: 20),
          Container (
            alignment: Alignment.center,
            padding: const EdgeInsets.all(50.0),
            margin: const EdgeInsets.all(50.0),
            decoration: BoxDecoration(
                color: Colors.deepOrange,
                borderRadius: const BorderRadius.all(Radius.circular(25.0)),
                border: Border.all(width: 15.0, color: Colors.lightGreen)
            ),
            child: const Text(
              "Я, Шарко В.М., студент группы ИСП-3-03 !!!",
              textDirection: TextDirection.ltr,
              textAlign: TextAlign.center,
              style: TextStyle(
                color: Colors.black,
                fontSize: 50.0,
                fontWeight: FontWeight.bold,
              ),
            ),
          ),
        ],
      ),
    );
  }
}
    class LB4_1 extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Container(
    child: Column(
    children: <Widget>[
    //SizedBox(height: 20),
    Row(
    mainAxisAlignment: MainAxisAlignment.center,
      children: <Widget>[
        Container(
          padding: const EdgeInsets.all(20.0),
          margin: const EdgeInsets.all(0.0),
          width: 200,
          height: 100,
          decoration: BoxDecoration(
            color: Colors.deepPurple.shade200,
            border: Border.all(width: 10, color: Colors.indigo.shade600),
          ),
          child: Center(
            child: Text(
              'Карточка',
              style:
              TextStyle(fontSize: 16, fontWeight: FontWeight.bold),
            ),
          ),
        ),
        Container(
          padding: const EdgeInsets.all(10.0),
          margin: const EdgeInsets.all(0.0),
          width: 200,
          height: 100,
          decoration: BoxDecoration(
            color: Colors.deepPurple.shade200,
            border: Border.all(width: 10, color: Colors.indigo.shade600),
          ),
          child: Center(
            child: Text(
              'Настройки',
              style:
              TextStyle(fontSize: 16, fontWeight: FontWeight.bold),
            ),
          ),
        ),
        Container(
          padding: const EdgeInsets.all(10.0),
          margin: const EdgeInsets.all(0.0),
          width: 200,
          height: 100,
          decoration: BoxDecoration(
            color: Colors.deepPurple.shade200,
            border: Border.all(width: 10, color: Colors.indigo.shade600),
          ),
          child: Center(
            child: Text(
              'О программе',
              style:
              TextStyle(fontSize: 16, fontWeight: FontWeight.bold),
            ),
          ),
        ),
      ],
    ),
    Container(
    padding: const EdgeInsets.all(10.0),
    margin: const EdgeInsets.all(0.0),
    width: 600,
    height: 500,
    decoration: BoxDecoration(
    color: Colors.lightBlue.shade100,
    border: Border.all(width: 10, color: Colors.indigo.shade600),
    ),
    child: SingleChildScrollView(
    child: Padding(
    padding: const EdgeInsets.all(8.0),
    child: Text(
    'Я плохая – ты хороший.\nРот от гнева перекошен.\nНе кричи – я не глухая.\nТы хороший – я плохая.\nТы моим терпением сломлен?\nЯ терплю – а ты назло мне\nСтекла бьешь – я поднимаю.\nТы хороший – я плохая.\nВверх рука – и замер… Ну же!\nЯ – нормально. Стеклам хуже.\nНе посмеешь. Я-то знаю.\nТы хороший – я плохая.\nЯ тебя не понимала, \nЯ дави-ла, все прощала,\nТы особый – я простая.\nТы хороший – я плохая.\nЛгать – привычка. Мстишь от скуки.\nЧто? Протягиваешь руки?\nВ пол колени – надломилось.\nЧто ж ты плачешь? Что случи-лось?\nУтром холодно в постели?\nКак? Когда? Вчера? Неделя…\nПочему ты мною брошен?\nЯ плохая – ты хороший.\nВсе исправишь? Все сначала…\nПочему я замолчала?\nВремя ниточку развяжет\nДверь за мной закрой…\nсквозняк же…',
    style:
    TextStyle(fontSize: 16, fontWeight: FontWeight.bold),
    textAlign: TextAlign.center,
    ),
    ),
    ),
    ),
    Row(
    mainAxisAlignment: MainAxisAlignment.center,
    children: <Widget>[
    Container(
    padding: const EdgeInsets.all(20.0),
    margin: const EdgeInsets.all(0.0),
    width: 300,
    height: 100,
    decoration: BoxDecoration(
    color: Colors.deepPurple.shade200,
    border: Border.all(width: 10, color: Colors.indigo.shade600),
    ),
    child: Center(
    child: Text(
    'Шарко В.М ИСП-3-03',
    style:
    TextStyle(fontSize: 16, fontWeight: FontWeight.bold),
    textAlign: TextAlign.center,
    ),
    ),
    ),
    Container(
    padding: const EdgeInsets.all(10.0),
    margin: const EdgeInsets.all(0.0),
    width: 300,
    height: 100,
    decoration: BoxDecoration(
    color: Colors.deepPurple.shade200,
    border: Border.all(width: 10, color: Colors.indigo.shade600),
    ),
    child: Center(
    child: Text(
    'Анна Ошарина',
    style:
    TextStyle(fontSize: 16, fontWeight: FontWeight.bold),
    textAlign: TextAlign.center,
    ),
    ),
    ),
    ],
    ),
    ],
    ),
    );
  }
}
    class LB4_2 extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Container(
  child: Column(
    children: <Widget>[
      //SizedBox(height: 20),
      Row(
        mainAxisAlignment: MainAxisAlignment.center,
        children: <Widget>[
          Container(
            padding: const EdgeInsets.all(1.0),
            width: 690,
            height: 80,
            decoration: BoxDecoration(
              color: Colors.purpleAccent,
              border: Border.all(width: 10, color: Colors.orangeAccent),
            ),
            child: Center(
              child: Align(
                alignment: Alignment.topCenter,
                child: Text(
                  'Шарко',
                  style:
                  TextStyle(fontSize: 16, fontWeight: FontWeight.bold),
                ),
              ),
            ),
          ),
        ],
      ),
      //____________________________три скруглённых квадрата!!!!_________________
      SizedBox(height: 10),
      Row(
        mainAxisAlignment: MainAxisAlignment.center,
        children: <Widget>[
          Container(
            padding: const EdgeInsets.all(20.0),
            width: 190,
            height: 150,
            decoration: BoxDecoration(
              color: Colors.green,
              border: Border.all(width: 10, color: Colors.teal),
              borderRadius: BorderRadius.circular(20),
            ),
            child: Center(
              child: Align(
                alignment: Alignment.centerLeft,
                child: Text(
                  'Шарко',
                  style:
                  TextStyle(fontSize: 16, fontWeight: FontWeight.bold),
                  textAlign: TextAlign.center,
                ),
              ),
            ),
          ),
          SizedBox(width: 60),
          Container(
            padding: const EdgeInsets.all(20.0),
            width: 190,
            height: 150,
            decoration: BoxDecoration(
              color: Colors.lightGreenAccent,
              border: Border.all(width: 10, color: Colors.purple),
              borderRadius: BorderRadius.circular(20),
            ),
            child: Center(
              child: Align(
                alignment: Alignment.center,
                child: Text(
                  'Шарко',
                  style:
                  TextStyle(fontSize: 16, fontWeight: FontWeight.bold),
                  textAlign: TextAlign.center,
                ),
              ),
            ),
          ),
          SizedBox(width: 60),
          Container(
            padding: const EdgeInsets.all(10.0),
            width: 190,
            height: 150,
            decoration: BoxDecoration(
              color: Colors.green,
              border: Border.all(width: 10, color: Colors.teal),
              borderRadius: BorderRadius.circular(20),
            ),
            child: Center(
              child: Align(
                alignment: Alignment.centerRight,
                child: Text(
                  'Шарко',
                  style:
                  TextStyle(fontSize: 16, fontWeight: FontWeight.bold),
                  textAlign: TextAlign.center,
                ),
              ),
            ),
          ),
        ],
      ),
      SizedBox(height: 10),
      //____________________________средний прямоугольник!!!!_____________
      Row(
        mainAxisAlignment: MainAxisAlignment.center,
        children: <Widget>[
          Container(
            padding: const EdgeInsets.all(1.0),
            width: 690,
            height: 80,
            decoration: BoxDecoration(
              color: Colors.red,
              border: Border.all(width: 10, color: Colors.brown),
            ),
            child: Center(
              child: Align(
                alignment: Alignment.bottomCenter,
                child: Text(
                  'Шарко',
                  style:
                  TextStyle(fontSize: 16, fontWeight: FontWeight.bold),
                ),
              ),
            ),
          ),
        ],
      ),
      SizedBox(height: 10),
      //____________________________четыре непонятных фигуры!!! ______________
      Row(
        mainAxisAlignment: MainAxisAlignment.center,
        children: <Widget>[
          Container(
            padding: const EdgeInsets.all(20.0),
            width: 150,
            height: 180,
            decoration: BoxDecoration(
              color: Colors.amberAccent,
              border: Border.all(width: 10, color: Colors.indigo.shade600),
            ),
            child: Center(
              child: Align(
                alignment: Alignment.topCenter,
                child: Text(
                  'Шарко',
                  style:
                  TextStyle(fontSize: 16, fontWeight: FontWeight.bold),
                  textAlign: TextAlign.center,
                ),
              ),
            ),
          ),
          SizedBox(width: 50),
          Container(
            padding: const EdgeInsets.all(20.0),
            width: 100,
            height: 180,
            decoration: BoxDecoration(
              color: Colors.deepPurple.shade200,
              border: Border.all(width: 10, color: Colors.indigo.shade600),
              borderRadius: BorderRadius.circular(100),
            ),
            child: Center(
              child: Align(
                alignment: Alignment.center,
                child: Text(
                  'Шарко',
                  style:
                  TextStyle(fontSize: 16, fontWeight: FontWeight.bold),
                  textAlign: TextAlign.center,
                ),
              ),
            ),
          ),
          SizedBox(width: 50),
          Container(
            padding: const EdgeInsets.all(20.0),
            width: 100,
            height: 180,
            decoration: BoxDecoration(
              color: Colors.deepPurple.shade200,
              border: Border.all(width: 10, color: Colors.indigo.shade600),
              borderRadius: BorderRadius.circular(100),
            ),
            child: Center(
              child: Align(
                alignment: Alignment.center,
                child: Text(
                  'Шарко',
                  style:
                  TextStyle(fontSize: 16, fontWeight: FontWeight.bold),
                  textAlign: TextAlign.center,
                ),
              ),
            ),
          ),
          SizedBox(width: 50),
          Container(
            padding: const EdgeInsets.all(10.0),
            width: 150,
            height: 180,
            decoration: BoxDecoration(
              color: Colors.amberAccent,
              border: Border.all(width: 10, color: Colors.indigo.shade600),
            ),
            child: Center(
              child: Align(
                alignment: Alignment.bottomCenter,
                child: Text(
                  'Шарко',
                  style:
                  TextStyle(fontSize: 16, fontWeight: FontWeight.bold),
                  textAlign: TextAlign.center,
                ),
              ),
            ),
          ),
        ],
      ),
      SizedBox(height: 10),
      //_______________________самые нижние фигуры!!!!__________________________
      Row(
        mainAxisAlignment: MainAxisAlignment.center,
        children: <Widget>[
          Container(
            width: 690,
            height: 150,
            decoration: BoxDecoration(
              color: Colors.blueGrey,
              border: Border.all(width: 10, color: Colors.lime),
            ),
            child: Row(
              children: <Widget>[
                SizedBox(width: 10),
                Container(
                  padding: const EdgeInsets.all(10.0),
                  width: 200,
                  height: 100,
                  decoration: BoxDecoration(
                    color: Colors.cyanAccent,
                    border: Border.all(width: 10, color: Colors.black),
                  ),
                  child: Center(
                    child: Align(
                      alignment: Alignment.centerLeft,
                      child: Text(
                        'Шарко',
                        style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold),
                      ),
                    ),
                  ),
                ),
                SizedBox(width: 250),
                Container(
                  padding: const EdgeInsets.all(10.0),
                  width: 200,
                  height: 100,
                  decoration: BoxDecoration(
                    color: Colors.cyanAccent,
                    border: Border.all(width: 10, color: Colors.black),
                  ),
                  child: Center(
                    child: Align(
                      alignment: Alignment.centerRight,
                      child: Text(
                        'Шарко',
                        style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold),
                      ),
                    ),
                  ),
                ),
              ],
            ),
          ),
        ],
      ),
    ],
  ),
);
}
}
    class LB5 extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Container(
  child: Column(
    children: <Widget>[
      SizedBox(height: 20),
      Row(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            Container(
              width: 300,
              height: 400,
              color: Colors.black,
              child: Align(
                alignment: Alignment.topCenter,
                child: Image.asset("assets/images/makima.jpeg", width: 300, height: 400, fit:BoxFit.fill),
              ),
            ),
          ]
      ),
      SizedBox(height: 20),
      Row(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            Container(
              padding: const EdgeInsets.all(1.0),
              width: 300,
              height: 80,
              decoration: BoxDecoration(
                color: Colors.white,
                border: Border.all(width: 10, color: Colors.black),
              ),
              child: Center(
                child: Align(
                  alignment: Alignment.center,
                  child: Text(
                    'Макима все слышит',
                    style:
                    TextStyle(fontSize: 16, fontWeight: FontWeight.bold),
                  ),
                ),
              ),
            ),
          ]
      ),
      SizedBox(height: 20),
      Row(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            ElevatedButton(
              onPressed: () {
                // Действия при нажатии на кнопку 1
              },
              style: ElevatedButton.styleFrom(
                shape: RoundedRectangleBorder(
                  borderRadius: BorderRadius.zero, // прямоугольная форма
                  side: BorderSide(width: 2, color: Colors.black), // черная рамка
                ),
                padding: EdgeInsets.symmetric(horizontal: 20, vertical: 10),
                primary: Colors.white,
                elevation: 0,
              ),
              child: Text(
                'Кнопка 1',
                style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold, color: Colors.black),
              ),
            ),
            SizedBox(width: 5),
            ElevatedButton(
              onPressed: () {
                // Действия при нажатии на кнопку 1
              },
              style: ElevatedButton.styleFrom(
                shape: RoundedRectangleBorder(
                  borderRadius: BorderRadius.zero, // прямоугольная форма
                  side: BorderSide(width: 2, color: Colors.black), // черная рамка
                ),
                padding: EdgeInsets.symmetric(horizontal: 20, vertical: 10),
                primary: Colors.white,
                elevation: 0,
              ),
              child: Text(
                'Кнопка 2',
                style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold, color: Colors.black),
              ),
            ),
            SizedBox(width: 5),
            ElevatedButton(
              onPressed: () {
                // Действия при нажатии на кнопку 1
              },
              style: ElevatedButton.styleFrom(
                shape: RoundedRectangleBorder(
                  borderRadius: BorderRadius.zero, // прямоугольная форма
                  side: BorderSide(width: 2, color: Colors.black), // черная рамка
                ),
                padding: EdgeInsets.symmetric(horizontal: 20, vertical: 10),
                primary: Colors.white,
                elevation: 0,
              ),
              child: Text(
                'Кнопка 3',
                style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold, color: Colors.black),
              ),
            ),
          ]
      ),
    ],
  ),
);
}
}
    class LB6 extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    Widget buildButtonColumn(IconData icon, String label, Color color) {
      return Column(
        mainAxisSize: MainAxisSize.min,
        mainAxisAlignment: MainAxisAlignment.center,
        children: [
          Icon(icon, color: color),
          Container(
            margin: const EdgeInsets.only(top: 8.0),
            child: Text(
              label,
              style: TextStyle(
                fontSize: 14.0,
                fontWeight: FontWeight.w400,
                color: color,
              ),
            ),
          ),
        ],
      );
    }
    Widget pictureSection = Container(
      child: Row(
        children: [
          SizedBox(height: 0),
          Expanded(
            child: Image.asset(
              "assets/images/makkkima.jpeg",
              height: 240.0,
              width: 452,
              fit: BoxFit.fitWidth,
            ),
          ),
        ],
      ),
    );

    Widget buttonSection = Container(
      child: Row(
        mainAxisAlignment: MainAxisAlignment.spaceEvenly,
        children: [
          buildButtonColumn(Icons.face_3_sharp, 'Внешность', Colors.red),
          buildButtonColumn(
              Icons.supervised_user_circle, 'Вид', Colors.red),
          buildButtonColumn(
              Icons.visibility_rounded, 'Способности', Colors.red),
        ],
      ),
    );

    Widget textSection = Container(
      padding: const EdgeInsets.all(32.0),
      child: Text(
        ''' Макима — демон, похожий на человеческую женщину лет двадцати, среднего телосложения и роста чуть выше среднего. У неё длинные светло-рыжие/светло-русые волосы, обычно заплетённые в свободную косу с чёлкой, доходящей чуть выше бровей, и двумя прядями волос, обрамляющими лицо. Глаза у нее жёлтые с множеством красных колец внутри, и это единственный видимый признак её нечеловеческой природы.Её обычная форма для службы общественной безопасности состоит из белой рубашки с длинными рукавами, чёрного галстука, чёрных брюк и коричневых туфель.''',
        softWrap: true,
      ),
    );



    Widget titleSection = Container(
      padding: const EdgeInsets.all(32.0),
      child: Row(
        children: [
          Expanded(
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Container(
                  padding: const EdgeInsets.only(bottom: 8.0),
                  child: Text(
                    'Человек бензопила',
                    style: TextStyle(
                      fontSize: 15.0,
                      fontWeight: FontWeight.bold,
                    ),
                  ),
                ),
                Text(
                  'Макима. Демон Контроля',
                  style: TextStyle(
                    fontSize: 15.0,
                    color: Colors.red[500],
                  ),
                ),
              ],
            ),
          ),
          Icon(
            Icons.church,
            color: Colors.red[800],
            size: 50,
          ),
        ],
      ),
    );

    return Column(
      children: [
        pictureSection,
        titleSection,
        buttonSection,
        textSection,

      ],
    );
  }
}

class MyApp1 extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      routes: {
        '/':(BuildContext context) => MyApp1(),
        '/second':(BuildContext context) => MessagesPage()
      },
      home: DefaultTabController(
        length: 6,
        child: Scaffold(
          drawer: Drawer(
            child: ListView(
              padding: const EdgeInsets.all(0),
              children: [
                const DrawerHeader(
                  decoration: BoxDecoration(
                    color: Colors.red,
                  ), //BoxDecoration
                  child: UserAccountsDrawerHeader(
                    decoration: BoxDecoration(color: Colors.red),
                    accountName: Text(
                      "Вероника Шарко",
                      style: TextStyle(fontSize: 18, color: Colors.black),
                    ),
                    accountEmail: Text("шарко@gmail.com"),
                    currentAccountPictureSize: Size.square(50),
                    currentAccountPicture: CircleAvatar(
                      backgroundColor: Colors.white,
                      child: Text(
                        "В",
                        style: TextStyle(fontSize: 30.0, color: Colors.black),
                      ), //Text
                    ), //circleAvatar
                  ), //UserAccountDrawerHeader
                ), //Dr
                ListTile(
                  leading: Icon(Icons.message, color: Colors.blue),
                  title: Text('Сообщения'),
                  onTap: () {
                    Navigator.pushNamed(context, '/messages');
                  },
                ),
                ListTile(
                  textColor: Colors.black,
                  titleTextStyle: TextStyle(fontWeight: FontWeight.w800),
                  leading: Icon(Icons.account_circle, color: Colors.red),
                  title: Text('Профиль'),
                ),
                ListTile(
                  textColor: Colors.black,
                  titleTextStyle: TextStyle(fontWeight: FontWeight.w800),
                  leading: Icon(Icons.settings, color: Colors.green),
                  title: Text('Настройки'),
                ),

              ],
            ),
          ),
          appBar: AppBar(
            bottom: const TabBar(
              indicatorColor: Colors.red,
              tabs: [
                Tab(icon: Icon(Icons.temple_buddhist, color: Colors.red)),
                Tab(icon: Icon(Icons.surfing, color: Colors.red)),
                Tab(icon: Icon(Icons.ramen_dining_sharp, color: Colors.red)),
                Tab(icon: Icon(
                    Icons.pest_control_rodent_rounded, color: Colors.red)),
                Tab(icon: Icon(Icons.wine_bar, color: Colors.red)),
                Tab(icon: Icon(Icons.star, color: Colors.red)),
              ],
            ),
            backgroundColor: Colors.black,
            toolbarHeight: 80,
            title: Text(
              "Сборник работ))",
              style: TextStyle(
                color: Colors.red,
              ),
            ),
            centerTitle: true,
            actions: [
              IconButton(onPressed: () {},
                  icon: Icon(Icons.person),
                  color: Colors.red),
              IconButton(onPressed: () {},
                  icon: Icon(Icons.settings),
                  color: Colors.red),
              IconButton(onPressed: () {},
                  icon: Icon(Icons.access_alarm),
                  color: Colors.red),
            ],
          ),
            body: TabBarView(
              children: [

                ListView(
                  children: [
                    LB3(),
                  ],
                ),
                ListView(
                  children: [
                    LB4_1(),
                  ],
                ),
                ListView(
                  children: [
                    LB4_2(),
                  ],
                ),
                ListView(
                  children: [
                    LB5(),
                  ],
                ),

                ListView(
                  children: [
                    LB6(),
                  ],
                ),
                ListView.builder(
                  padding: const EdgeInsets.all(8),
                  itemCount: users.length,
                  itemBuilder: (BuildContext context, int index) {
                    return Column(
                      children: [
                        Container(
                          padding: EdgeInsets.symmetric(vertical: 10),
                          child: Row(
                            crossAxisAlignment: CrossAxisAlignment.start,
                            children: [
                              Expanded(
                                child: Column(
                                  crossAxisAlignment: CrossAxisAlignment.start,
                                  children: [
                                    Text(users[index], style: TextStyle(
                                        fontSize: 22, color: Colors.red)),
                                    RichText(
                                      text: TextSpan(
                                        children: [
                                          TextSpan(
                                            text: 'Тип оружия: ',
                                            style: TextStyle(
                                              fontSize: 18,
                                              color: Colors.blue,
                                            ),
                                          ),
                                          TextSpan(
                                            text: companies[index],
                                            style: TextStyle(
                                              fontSize: 18,
                                              color: Colors.black,
                                            ),
                                          ),
                                        ],
                                      ),
                                    ),
                                    RichText(
                                      text: TextSpan(
                                        children: [
                                          TextSpan(
                                            text: 'Описание: ',
                                            style: TextStyle(
                                              fontSize: 18,
                                              color: Colors.green,
                                            ),
                                          ),
                                          TextSpan(
                                            text: description[index],
                                            style: TextStyle(
                                              fontSize: 18,
                                              color: Colors.black,
                                            ),
                                          ),
                                        ],
                                      ),
                                    ),
                                  ],
                                ),
                              ),
                              SizedBox(width: 10),
                              Image.asset(
                                avatars[index],
                                // Используем список avatars для указания пути к картинке
                                width: 100,
                                height: 100,
                              ),
                            ],
                          ),
                        ),
                        Divider(
                          color: Colors.red,
                          thickness: 3,
                        ),
                      ],
                    );
                  },
                ),
              ],
            ),
          ),
        ),
    );
  }

}

  void main() {
    runApp(
        MaterialApp(
            routes: {
              '/':(BuildContext context) => MyApp1(),
              '/second':(BuildContext context) => MessagesPage()
            },
            home: MyApp1()
        ));
  }
